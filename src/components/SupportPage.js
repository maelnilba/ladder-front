import {
  Flex,
  Box,
  Stack,
  Text,
  Tag,
  useColorMode,
  Button,
  Accordion,
  AccordionItem,
  AccordionButton,
  AccordionPanel,
  AccordionIcon,
  Image,
  useToast,
  Link,
  useDisclosure,
  Modal,
  ModalOverlay,
  ModalContent,
  ModalCloseButton,
  ModalHeader,
  ModalBody,
  ModalFooter,
} from "@chakra-ui/react";
import { useMediaQuery } from "../utils/useMediaQuery";
import { useStatus, useStatusLog } from "../utils/useStatus";
import { useState } from "react";
import { FaTwitter } from "react-icons/fa";

export function SupportPage() {
  const { colorMode, toggleColorMode } = useColorMode();
  const [page, setPage] = useState("informations");
  const isDark = colorMode === "dark";

  const [isLargerThan720] = useMediaQuery(720);
  const [loading, code, message, description] = useStatus();

  return (
    <Flex
      direction={isLargerThan720 ? "row" : "column"}
      justifyContent="space-around"
    >
      <Box m={5} p={5}>
        <Stack direction="column" spacing={5}>
          <Button
            isFullWidth
            bgColor={isDark ? "gray.800" : "gray.200"}
            onClick={() => setPage("informations")}
          >
            Informations
          </Button>
          <Button
            isFullWidth
            bgColor={isDark ? "gray.800" : "gray.200"}
            onClick={() => setPage("problems")}
          >
            Probl√®mes r√©currents
          </Button>
          <Button
            isFullWidth
            bgColor={isDark ? "gray.800" : "gray.200"}
            onClick={() => setPage("contact")}
          >
            Contact
          </Button>
          <Link
            href="https://southern-voyage-58e.notion.site/Changelog-c30c9f5536f44d0594a25df130aa7bd2"
            isExternal
          >
            <Button isFullWidth bgColor={isDark ? "gray.800" : "gray.200"}>
              Changelog
            </Button>
          </Link>
          {!loading && <LogButton code={code} message={message} />}
        </Stack>
      </Box>
      {page == "informations" && <InformationPage />}
      {page == "problems" && <ProblemPage />}
      {page == "contact" && <ContactPage />}
    </Flex>
  );
}

const getLedColor = (code) => {
  if (code == 200) {
    return "üü° Actif";
  } else if (code == 404) {
    return "üî¥ Inactif";
  } else if (code == 400) {
    return "üü† Perturbations";
  } else if (code == 101) {
    return "üü£ Maintenance";
  } else if (code == 102) {
    return "‚ö™Ô∏è";
  }
};

const LogButton = ({ code, message }) => {
  const led = getLedColor(code);
  const { colorMode, toggleColorMode } = useColorMode();
  const { isOpen, onOpen, onClose } = useDisclosure();
  const isDark = colorMode === "dark";
  const [loading, logs] = useStatusLog();
  console.log(logs);
  return (
    <>
      <Button
        isFullWidth
        bgColor={isDark ? "gray.800" : "gray.200"}
        onClick={onOpen}
      >
        {led}
      </Button>
      <Modal isOpen={isOpen} onClose={onClose} colorScheme="gray">
        <ModalOverlay />
        <ModalContent>
          <ModalHeader color={isDark ? "gray.200" : "gray.800"}>
            Derniers logs
          </ModalHeader>
          <ModalCloseButton color={isDark ? "gray.200" : "gray.800"} />
          {!loading && (
            <ModalBody color={isDark ? "gray.200" : "gray.800"}>
              <span>
                {logs.map((log, i) => (
                  <LogTag key={i} log={log} />
                ))}
              </span>
            </ModalBody>
          )}
          <ModalFooter></ModalFooter>
        </ModalContent>
      </Modal>
    </>
  );
};

const LogTag = ({ log }) => {
  const { created_at, code, message, description } = log;
  return (
    <Stack direction="row" spacing={1}>
      <Tag>{created_at}</Tag>
      <Text>{code}</Text>
      <Text>{message}</Text>
      <Text>{description}</Text>
    </Stack>
  );
};

const InformationPage = () => {
  const { colorMode, toggleColorMode } = useColorMode();
  const isDark = colorMode === "dark";

  return (
    <Stack
      bgColor={isDark ? "gray.800" : "gray.200"}
      m={5}
      p={5}
      spacing={4}
      borderRadius={15}
      maxWidth="920px"
      direction="column"
    >
      <Text textAlign="justify">
        Certains fonctionnement du ladder ne sont pas toutes intuitives et
        peuvent √™tre confondu avec des bugs, voir la liste ci dessous :
      </Text>
      <Text textAlign="justify">
        ‚Ä¢ Certain match ne sont pas r√©cup√©rable en heure pleine, √ßela est
        al√©atoire et in√©vitable.
      </Text>
      <Text textAlign="justify">
        ‚Ä¢ Les combats de 3V3 √©quipe sont m√©lang√©s avec ceux de 3V3 solo. Aucune
        distinction direct n'est possible entre eux, des solutions sont en
        reflexions.
      </Text>
      <Text textAlign="justify">
        ‚Ä¢ Les pseudos avec un alphabet cyrillique ne fonctionne pas. Une
        solution sera bient√¥t mise en test.
      </Text>
      <Text textAlign="justify">
        ‚Ä¢ Les personnages avec un niveau inf√©rieur √† 200 ne sont pas prit en
        compte pour la r√©cup√©ration de cote et de serveur. Il s'agit d'un test
        pour v√©rifier l'impact sur les performences du au nombre √©l√©v√©s de
        combat 1V1 199 contre 199. Cela pourra changer dans les mises √† jours √†
        suivre selon l'analyse des performences.
      </Text>
      <Text textAlign="justify">
        ‚Ä¢ Les c√¥tes des personnages peuvent rencontrer un probl√®me de
        synchronisation. Si un probl√®me survient lors du processus v√¥tre c√¥te
        n'est pas actualis√©. La correction des bugs futurs est cens√© atteinu√© la
        fr√©quence du probl√®me.
      </Text>
      <Text textAlign="justify">
        ‚Ä¢ Le r√©sultat des victoires et d√©faites se base sur les c√¥tes des
        matchs. Si un probl√®me est pr√©sent dans les informations du match cela
        se r√©percute sur le r√©sultat.
      </Text>
    </Stack>
  );
};

const ContactPage = () => {
  const { colorMode, toggleColorMode } = useColorMode();
  const isDark = colorMode === "dark";
  const toast = useToast();
  const handleClipboard = () => {
    navigator.clipboard.writeText("Nib#5952");
    toast({
      title: "Copi√© !",
      description: "Copi√© dans votre clipboard",
      status: "success",
      duration: 2000,
      isClosable: true,
    });
  };
  return (
    <Stack
      bgColor={isDark ? "gray.800" : "gray.200"}
      m={5}
      p={5}
      spacing={4}
      borderRadius={15}
      maxWidth="920px"
      direction="column"
    >
      <Text textAlign="justify">
        Pour l'explication et l'aide d'une r√©solution √† un probl√®me, le
        signalement d'un bug pr√©sent sur le site, ou autres, vous pouvez me
        contacter par les moyens suivants :
      </Text>
      <Flex direction="row" align="center">
        <Text fontWeight={600}> Sur Discord</Text>
        <Button
          leftIcon={
            <Image
              borderRadius="full"
              boxSize="32px"
              src="../assets/profilnib.jpg"
              alt="Nib"
            />
          }
          ml={2}
          size="md"
          colorScheme="gray"
          variant="solid"
          onClick={() => handleClipboard()}
        >
          Nib#5952
        </Button>
        <Link isExternal href="https://twitter.com/nibounet">
          <Button ml={2} colorScheme="twitter" leftIcon={<FaTwitter />}>
            Twitter
          </Button>
        </Link>
      </Flex>
    </Stack>
  );
};

const ProblemPage = () => {
  const { colorMode, toggleColorMode } = useColorMode();
  const isDark = colorMode === "dark";
  return (
    <Stack
      bgColor={isDark ? "gray.800" : "gray.200"}
      m={5}
      p={5}
      spacing={4}
      borderRadius={15}
      maxWidth="920px"
      direction="column"
    >
      <Text textAlign="justify">
        Le fonctionnement du site n√©cessite l'utilisation d'un client Dofus, par
        cons√©quent chacun √©lement li√© √† celui-ci ne peut √™tre totalement √©vit√©.
        Cependant certaines complications peuvent √™tre r√©solues par vous.
      </Text>
      <Text textAlign="justify">
        Vous pouvez retrouver ci-dessous une liste des probl√®mes r√©currents
        ainsi qu'une aide √† leur r√©solution :
      </Text>
      <Accordion colorScheme="gray" allowMultiple>
        <AccordionItem>
          <AccordionButton>
            <Box flex="1" textAlign="left">
              Je ne trouve pas mon personnage via la recherche
            </Box>
            <AccordionIcon />
          </AccordionButton>
          <AccordionPanel pb={4}>
            <Text textAlign="justify">
              Si vous n'arrivez pas √† trouver via les options de recherche,
              essayer d'acc√©der √† la page players/[id] directement via l'URL,
              l'id √©tant le num√©ro pr√©sent sur votre page perso. Les pseudos
              utilisant l'alphabet russe ne sont pas directement r√©cup√©rables.
            </Text>
          </AccordionPanel>
        </AccordionItem>

        <AccordionItem>
          <AccordionButton>
            <Box flex="1" textAlign="left">
              Mon personnage n'est pas r√©f√©renc√©
            </Box>
            <AccordionIcon />
          </AccordionButton>

          <AccordionPanel pb={4}>
            <Text textAlign="justify">
              Lancer un nouveau combat de KIS, si cela ne fonctionne pas,
              v√©rifier que vous avez cocher "Afficher le Ladder" sur votre page
              perso Dofus.
            </Text>
          </AccordionPanel>
        </AccordionItem>

        <AccordionItem>
          <AccordionButton>
            <Box flex="1" textAlign="left">
              Ma cote 3V3 est √† 0
            </Box>
            <AccordionIcon />
          </AccordionButton>

          <AccordionPanel pb={4}>
            <Text textAlign="justify">
              La r√©cup√©ration de la cote n'est pas possible si vous √™tes encore
              en combats de placement. Si le probl√®me persiste, v√©rifier que
              vous avez cocher "Afficher le Ladder" sur votre page perso Dofus.
            </Text>
          </AccordionPanel>
        </AccordionItem>

        <AccordionItem>
          <AccordionButton>
            <Box flex="1" textAlign="left">
              Ma cote 1V1 est √† 0
            </Box>
            <AccordionIcon />
          </AccordionButton>

          <AccordionPanel pb={4}>
            <Text textAlign="justify">
              V√©rifier que vous avez cocher "Afficher le Ladder" sur votre page
              perso Dofus.
            </Text>
          </AccordionPanel>
        </AccordionItem>

        <AccordionItem>
          <AccordionButton>
            <Box flex="1" textAlign="left">
              Mon personnage est pr√©sent plusieurs fois
            </Box>
            <AccordionIcon />
          </AccordionButton>

          <AccordionPanel pb={4}>
            <Text textAlign="justify">
              Lors d'un changement de serveur, le jeu supprime et recr√©er un
              nouveau personnage, avec un nouveau id, votre personnage sera
              alors pr√©sent le nombre de fois √©gal √† un changement de serveur.
              Si vous voulez supprimer votre ancien personnage, utiliser un
              moyen de contact.
            </Text>
          </AccordionPanel>
        </AccordionItem>
      </Accordion>
    </Stack>
  );
};
